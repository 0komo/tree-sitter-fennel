===
numbers
===

1
1.0

---

(program
  (number)
  (number))

===
strings
===

"string"

---

(program
 (string))

===
quoted value
===

'[]
`123

---
(program
  (quoted_value 
    (sequential_table))
  (quoted_value
   (number)))

===
identifiers
===

a
?a
a?
$1
$

---

(program
  (identifier)
  (identifier)
  (identifier)
  (identifier)
  (identifier))

===
booleans + nil
===

true
false
nil

---

(program
  (boolean)
  (boolean)
  (nil))

===
tables
===

{"key" value
 "number" 531
 "f" (fn [x] (+ x 2))}

---

(program
  (table
    (string)
    (identifier)
    (string)
    (number)
    (string)
    (function_definition
      (parameters
        (identifier))
      body: (function_call
              name: (identifier)
              (identifier)
              (number)))))

===
sequential tables
===

["abd" "def" "xyz"]

---

(program
  (sequential_table
    (string)
    (string)
    (string)))

===
comments
===

; this is a comment

---

(program
(comment))

===
field expressions
===

(string.format "%d" 1)
(object:method)

---

(program
  (function_call
    name: (field_expression
      (identifier)
      (identifier))
    (string)
    (number))
  (function_call
    name: (field_expression
      (identifier)
      (field))))
