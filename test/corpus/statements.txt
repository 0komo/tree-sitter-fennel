===
function call
===

(test 1 a)
(test (test))

---

(program
  (list
    (symbol)
    (number)
    (symbol))
  (list
    (symbol)
    (list
      (symbol))))

===
method call
===

(foo.bar.baz:method :arg)
(foo.bar.baz :method :arg)

---

(program
  (list
    (multi_symbol_method
      base: (multi_symbol
              (symbol_fragment)
              (symbol_fragment)
              (symbol_fragment))
      method: (symbol_fragment))
    (string (string_content)))
  (list
    (multi_symbol
      (symbol_fragment)
      (symbol_fragment)
      (symbol_fragment))
    (string (string_content))
    (string (string_content))))

===
function/lambda definition
===

(fn abcs [a b c] {: a : b : c})
(fn abcs-but-with-varargs [a b ...] [...])

(lambda ab.cs [a b & cs]
  (print a)
  (print b)
  (print cs))

(λ ooo-docstring [] :docstring a)
(λ booo-no-docstring [] :not-docstring)

---

(program
  (list
    (symbol)
    (symbol)
    (sequence
      (symbol)
      (symbol)
      (symbol))
    (table
      (table_pair
        key: (symbol)
        value: (symbol))
      (table_pair
        key: (symbol)
        value: (symbol))
      (table_pair
        key: (symbol)
        value: (symbol))))
  (list
    (symbol)
    (symbol)
    (sequence
      (symbol)
      (symbol)
      (symbol))
    (sequence
      (symbol)))
  (list
    (symbol)
    (multi_symbol
      (symbol_fragment)
      (symbol_fragment))
    (sequence
      (symbol)
      (symbol)
      (symbol)
      (symbol))
    (list
      (symbol)
      (symbol))
    (list
      (symbol)
      (symbol))
    (list
      (symbol)
      (symbol)))
  (list
    (symbol)
    (symbol)
    (sequence)
    (string (string_content))
    (symbol))
  (list
    (symbol)
    (symbol)
    (sequence)
    (string (string_content))))
